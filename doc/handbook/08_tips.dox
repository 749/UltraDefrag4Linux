/*
 *  UltraDefrag - a powerful defragmentation tool for Windows NT.
 *  Copyright (c) 2007-2015 Dmitri Arkhangelski (dmitriar@gmail.com).
 *  Copyright (c) 2010-2013 Stefan Pendl (stefanpe@users.sourceforge.net).
 *
 *  Permission is granted to copy, distribute and/or modify this document
 *  under the terms of the GNU Free Documentation License, Version 1.3 or
 *  any later version published by the Free Software Foundation; with no
 *  Invariant Sections.
 */

/**
 * @page Tips Tips and Tricks
 *
 * <h1>Performance</h1>
 * <h3>How to improve system performance significantly</h3>
 * First of all we recommend to disable the Windows
 * <a href="http://en.wikipedia.org/wiki/Paging#Windows_NT">paging file</a>.
 * It expands RAM, but works much slower. If you need more memory than
 * physically installed, buy more for the best performance.
 *
 * Then, if you'd like to keep some files close to the beginning
 * of the disk because of the highest speed of this area, don't ask the disk defragmenter
 * for this job: just <a href="http://gparted.sourceforge.net/">repartition</a>
 * the disk and use the first partition to keep the most
 * frequently accessed files while the second one - for backups,
 * videos, music and other stuff tolerant for a bit slower access.
 *
 * <h3>How frequently to defragment</h3>
 * Defragment files whenever you think their fragmentation
 * slows your system down. It really does make sense to
 * defragment the system drive from time to time and optimize
 * it after massive updates. On the other hand, data drives
 * rarely benefit from defragmentation, especially when they
 * are filled by music and videos.
 *
 * <h3>The best environment for UltraDefrag</h3>
 * The program shows the best performance being launched
 * at Windows boot where no concurrent processes are running.
 * Nothing interrupts its flow and no applications are locking
 * files preventing their movements.
 *
 * On the other hand, when your system is in use, some files,
 * being locked by running applications, drop UltraDefrag
 * performance down. Due to this reason we recommend to
 * optimize entire disks at Windows boot rather than on
 * a fully running system. Slightly better results can be
 * achieved in Windows safe mode, but at boot they're
 * always the best.
 *
 * @note
 * You should disable your virus detection software before
 * defragmentation, because otherwise it will be extremely slow.
 * If your antivirus program allows to exclude processes from being
 * monitored, you might exclude UltraDefrag instead of disabling
 * it completely.
 *
 * Regardless of environment remove temporary contents from disks
 * before their optimization. This will shorten optimization time
 * and lead to better results.
 *
 * <h1>Hardware</h1>
 * <h3>Flash and SSD drives</h3>
 * Defragmentation of
 * <a href="http://en.wikipedia.org/wiki/Flash_memory">flash memory</a> and
 * <a href="http://en.wikipedia.org/wiki/Solid-state_drive">solid-state drives</a>
 * (SSD) is not recommended, as it reduces their lifespan being pretty useless:
 * those drives don't rely on physical movements of mechanical parts anyway.
 * On the other hand, defragmentation can help to make their contents more
 * <a href="http://sourceforge.net/p/ultradefrag/discussion/709672/thread/7f71fff6">recoverable</a>.
 *
 * <h3>Floppy drives</h3>
 * Floppy drives defragmentation is not recommended, because it
 * always reduces lifespan of the floppies.
 *
 * <h3>Checking the file system</h3>
 * Freshly used drives can be defragmented immediately; any drive,
 * which has been in use for a long time without maintenance, should
 * be checked for consistency first. Open a command prompt and type
 * one of the following commands there:
 *
 * @htmlonly
 * <div class="fragment">
 * <div class="line"><span class="comment">:: check drive c: and repair it when needed</span></div>
 * <div class="line"><span class="keyword">chkdsk</span> C: /F /V</div>
 * <div class="line"></div>
 * <div class="line"><span class="comment">:: check drive c:, repair it and collect lost clusters</span></div>
 * <div class="line"><span class="comment">:: when needed (takes quite long, but is the safest)</span></div>
 * <div class="line"><span class="keyword">chkdsk</span> C: /R /F /V</div>
 * </div>
 * @endhtmlonly
 *
 * @latexonly
 * \begin{DoxyCode}
 * \rem{:: check drive c: and repair it when needed}
 * \cmd{chkdsk} C: /F /V
 *
 * \rem{:: check drive c:, repair it and collect lost clusters}
 * \rem{:: when needed (takes quite long, but is the safest)}
 * \cmd{chkdsk} C: /R /F /V
 * \end{DoxyCode}
 * @endlatexonly
 *
 * <h3>Parallel processing</h3>
 * Simultaneous defragmentation of multiple hard disks can save time.
 *
 * For instance:
 * - Hard disk 1 contains partitions C: and D:
 * - Hard disk 2 contains partitions G: and H:
 *
 * Start two UltraDefrag sessions simultaneously - one for partitions C: and D:
 * and another one for G: and H: to save up to 50% of time (compared to the case
 * when all four partitions are processed one by one). On the other hand,
 * don't try to defragment partitions C: and D: simultaneously - they belong
 * to the same physical disk, so their parallel processing will be pretty slow.
 *
 * <h1>Caveats</h1>
 * <h3>Repeated defragmentation</h3>
 * Highly fragmented disks will have to be defragmented
 * several times till you'll see any improvement.
 *
 * <h3>How to prevent endless boot processing</h3>
 * We are trying to keep the program as reliable as possible, but
 * some little chance still exists that its boot time interface
 * will crash making it impossible to boot into Windows. So, for
 * extra safety we recommend to automatically turn the program off
 * for subsequent boots by inclusion of the <b>boot-off</b> command
 * to the beginning of the boot time script.
 *
 * <h3>USN journal cleanup</h3>
 * Sometimes a fragmented <a href="http://technet.microsoft.com/en-us/library/cc788042.aspx">USN journal</a>
 * prevents free space consolidation. Open an administrative command prompt and type the following commands
 * there to clean it up:
 *
 * @htmlonly
 * <div class="fragment">
 * <div class="line"><span class="comment">:: query the journal parameters,</span></div>
 * <div class="line"><span class="comment">:: write them down to use later</span></div>
 * <div class="line"><span class="keyword">fsutil</span> usn queryjournal c:</div>
 * <div class="line"></div>
 * <div class="line"><span class="comment">:: delete the journal</span></div>
 * <div class="line"><span class="keyword">fsutil</span> usn deletejournal /n c:</div>
 * <div class="line"></div>
 * <div class="line"><span class="comment">:: now it's time to optimize the disk...</span></div>
 * <div class="line"></div>
 * <div class="line"><span class="comment">:: recreate the journal afterwards</span></div>
 * <div class="line"><span class="keyword">fsutil</span> usn createjournal m=33554432 a=4194304 c:</div>
 * </div>
 * @endhtmlonly
 *
 * @latexonly
 * \begin{DoxyCode}
 * \rem{:: query the journal parameters,}
 * \rem{:: write them down to use later}
 * \cmd{fsutil} usn queryjournal c:
 *
 * \rem{:: delete the journal}
 * \cmd{fsutil} usn deletejournal /n c:
 *
 * \rem{:: now it's time to optimize the disk...}
 *
 * \rem{:: recreate the journal afterwards}
 * \cmd{fsutil} usn createjournal m=33554432 a=4194304 c:
 * \end{DoxyCode}
 * @endlatexonly
 *
 * A reasonable value for the maximum size is 85MB for each 100GB
 * of the disk space. The allocation delta should be between
 * @htmlonly
 * <sup>1</sup>/<sub>8</sub>
 * @endhtmlonly
 * @latexonly
 * \begin{math}^1/_8\end{math}
 * @endlatexonly
 * and
 * @htmlonly
 * <sup>1</sup>/<sub>4</sub>
 * @endhtmlonly
 * @latexonly
 * \begin{math}^1/_4\end{math}
 * @endlatexonly
 * of the maximum size.
 * The default values are usually 32MB and 4MB respectively.
 *
 * @htmlonly
 * <HR>
 *  <TABLE STYLE="border: none; width: 97%; margin:auto;">
 *    <TR>
 *      <TD STYLE="text-align: left; width: 50%;">Previous: <a href="Reports.html">File Fragmentation Reports</a></TD>
 *      <TD STYLE="text-align: right; width: 50%;">Next: <a href="FAQ.html">Frequently Asked Questions</a></TD>
 *    </TR>
 *  </TABLE>
 * @endhtmlonly
 */
